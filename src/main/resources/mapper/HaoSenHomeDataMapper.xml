<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.HaoSenHomeDataMapper">

    <select id="getHomeData" resultType="com.example.demo.vo.HaoSenDetailsDataVO">

    <![CDATA[
        SELECT
            (SELECT count(*) FROM origin_data WHERE batch_code IN (SELECT batch_code FROM data_batch WHERE status = 1)) AS uncleanedCount,
            (SELECT count(*) FROM data_result WHERE feedback_type = '1' AND (status IS NULL OR status = '1')) AS unappealingCount,
            (SELECT count(*) FROM base_org_company WHERE status IN (1, 3, 4) AND addtime >= CURRENT_DATE - INTERVAL '7 days' AND addtime < (CURRENT_DATE + 1)::timestamp) AS companyCount,
            (SELECT count(*) FROM base_org_hos_clean WHERE status IN (1, 3, 4) AND addtime >= CURRENT_DATE - INTERVAL '7 days' AND addtime < (CURRENT_DATE + 1)::timestamp) AS hospitalCount,
            (SELECT count(*) FROM base_org_drug_store WHERE status IN (1, 3, 4) AND addtime >= CURRENT_DATE - INTERVAL '7 days' AND addtime < (CURRENT_DATE + 1)::timestamp) AS drugstoreCount
        ]]>

    </select>

    <select id="getCleanBarData" resultType="com.example.demo.vo.HaoSenBarDataVO">

        WITH date_series AS (
            SELECT generate_series(
                                   CURRENT_DATE - INTERVAL '6 days',
                                   CURRENT_DATE,
                                   INTERVAL '1 day'
                   )::date AS day
            ),
            table1_stats AS (
        SELECT
            DATE(addtime) AS day,
            COUNT(*) AS table1_count
        FROM base_org_company
        WHERE addtime >= CURRENT_DATE - INTERVAL '6 days' and status in ('1','3')
        GROUP BY DATE(addtime)
            ),
            table2_stats AS (
        SELECT
            DATE(addtime) AS day,
            COUNT(*) AS table2_name_count
        FROM base_org_drug_store
        WHERE addtime >= CURRENT_DATE - INTERVAL '6 days' and status in ('1','3')
        GROUP BY DATE(addtime)
            ),
            table3_stats AS (
        SELECT
            DATE(addtime) AS day,
            COUNT(*) AS table3_items
        FROM base_org_hos_clean
        WHERE addtime >= CURRENT_DATE - INTERVAL '6 days' and status in ('1','3')
        GROUP BY DATE(addtime)
            )
        SELECT
            ds.day,
            COALESCE(t1.table1_count, 0) AS companycount,
            COALESCE(t2.table2_name_count, 0) AS drugstorecount,
            COALESCE(t3.table3_items, 0) AS hoscount
        FROM date_series ds
                 LEFT JOIN table1_stats t1 ON ds.day = t1.day
                 LEFT JOIN table2_stats t2 ON ds.day = t2.day
                 LEFT JOIN table3_stats t3 ON ds.day = t3.day
        ORDER BY ds.day

    </select>


    <select id="getMainPieDataHosClean" resultType="com.example.demo.vo.PieDataVO">
        SELECT '医院' as name,count(*) as value  from base_org_hos_clean WHERE    status in (1,3,4)

    </select>

    <select id="getMainPieDataDrugStore" resultType="com.example.demo.vo.PieDataVO">
        SELECT '药店' as name,count(*) as  value from base_org_drug_store WHERE    status in (1,3,4)

    </select>


    <select id="getMainPieDataCompany" resultType="com.example.demo.vo.PieDataVO">
        SELECT '商业' as name ,count(*) as value  from base_org_company WHERE   status in (1,3,4)

    </select>


    <select id="getBranchBarDataMainBranch" resultType="com.example.demo.vo.PieDataVO">
        <![CDATA[
        SELECT '总分店编码待补充' name,count(*) as value from drug_store_haosen_demo_hscode WHERE  main_branch_kid is not null and main_branch is null
      ]]>
    </select>


    <select id="getBranchBarDataGeneralBranch" resultType="com.example.demo.vo.PieDataVO">
        <![CDATA[

        SELECT '总分院编码待补充' name,count(*) as value from hos_clean_haosen_demo_hscode  WHERE   general_branch_kid is not null and general_branch is null
        ]]>
    </select>

    <select id="getAppealUpdateData" resultType="com.example.demo.vo.HaoSenAppealUpdateDataVO">
        <![CDATA[
        WITH date_series AS (SELECT generate_series(
                                                    CURRENT_DATE - INTERVAL '6 days',
                                                    CURRENT_DATE,
                                                    INTERVAL '1 day'
                                    ) ::date
            AS day
            )
           , appeal_table AS (
        SELECT
            DATE (add_time) AS day, COUNT (*) AS table1_count
        FROM appeal_and_update
        WHERE add_time >= CURRENT_DATE - INTERVAL '6 days' and type ='1'
        GROUP BY DATE (add_time)
            ),
            update_table AS (
        SELECT
            DATE (add_time) AS day, COUNT (*) AS table2_count
        FROM appeal_and_update
        WHERE add_time >= CURRENT_DATE - INTERVAL '6 days' and type ='2'
        GROUP BY DATE (add_time)
            ),
            hs_code_table AS (

        SELECT
            DATE (add_time) AS day, COUNT (*) AS table3_count
        FROM data_result
        WHERE add_time >= CURRENT_DATE - INTERVAL '6 days' and feedback_type='2'
        GROUP BY DATE (add_time)

            )
        SELECT ds.day,
               COALESCE(t1.table1_count, 0) AS appealcount,
               COALESCE(t2.table2_count, 0) AS updatecount,
               COALESCE(t3.table3_count, 0) AS hscodecount
        from date_series ds
                 LEFT JOIN
             appeal_table t1 on ds.day = t1.day
                 LEFT JOIN
             update_table t2 on ds.day = t2.day
                 LEFT JOIN
             hs_code_table t3 on ds.day = t3.day
        ORDER BY ds.day
        ]]>
    </select>

</mapper>
